Questions 4â€“5 refer to the Card and Deck classes shown below.
public class Card
{
  private String suit;
  private int value; //0 to 12
  public Card(String cardSuit, int cardValue)
{ /* implementation */ }
public String getSuit()
{ return suit; }
public int getValue()
{ return value; }
public String toString()
{
String faceValue = "";
if (value == 11)
faceValue = "J";
else if (value == 12)
faceValue = "Q";
else if (value == 0)
faceValue = "K";
else if (value == 1)
faceValue = "A";
if (value >= 2 && value <= 10)
return value + " of " + suit;
else
return faceValue + " of " + suit;
}
}
public class Deck
{
private Card[] deck;
public final static int NUMCARDS = 52;
public Deck()
{ ...
/** Simulate shuffling the deck. */
public void shuffle()
{ ...
//Other methods are not shown.
}




4.Which of the following represents correct /* implementation */ code for the constructor in the Card class?
(A) suit = cardSuit;
value = cardValue;
(B) cardSuit = suit;
cardValue = value;
(C) Card = new Card(suit, value);
(D) Card = new Card(cardSuit, cardValue);
(E) suit = getSuit();
value = getValue();


(A) In the constructor, the private instance variables suit and value must be
initialized to the appropriate parameter values. Choice A is the only choice that
does this.
